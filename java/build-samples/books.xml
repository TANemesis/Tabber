<project name="books" default="sample.books.build" basedir=".">
  <!-- Path containing core.xml -->
  <dirname property="build_dir" file="${ant.file.books}"/>
  <import file="${build_dir}/core.xml"/>

  <!--  ===================================================================== -->
  <!--                 Build GData Books library.                            -->
  <!--  ===================================================================== -->

  <property name="gdata-books.jar"
    value="${build.jars}/gdata-books-${books.spec.version}.jar"/>

  <property name="sample.books.basedir"           value="${build}/sample/books"/>
  <property name="sample.books.src.home"          value="${sample.books.basedir}"/>
  <property name="sample.books.build.classes"     value="${sample.books.basedir}/classes"/>
  <property name="sample.books.build.lib"         value="${sample.books.basedir}/lib"/>
  <property name="sample.books.jar"               value="${sample.books.build.lib}/BooksClient.jar"/>
  <property name="sample.books.main"              value="sample.books.BooksClient"/>

  <target name="sample.books.clean"
   description="Delete old build and dist directories">
    <delete dir="${sample.books.build.classes}"/>
  </target>

  <target name="sample.books.dependencies">
    <antcall target="template.require.service.jar">
      <param name="template.service.name" value="books"/>
      <param name="template.service.version" value="${books.spec.version}"/>
    </antcall>
  </target>

  <path id="sample.books.compile.classpath">
    <path refid="build.service.core.classpath"/>
    <pathelement location="${gdata-books.jar}"/>
    <pathelement location="${sample-util.jar}"/>
  </path>

  <!-- samples build -->
  <target name="sample.books.build"
      depends="sample.books.dependencies,core.sample.core.util.build"
      description="Create binary distribution">

    <mkdir   dir="${sample.books.build.lib}"/>
    <mkdir    dir="${sample.books.build.classes}"/>

    <javac srcdir="${sample.books.src.home}"
           destdir="${sample.books.build.classes}"
           debug="${javac.debug}" debuglevel="${javac.debuglevel}"
           deprecation="false"
           optimize="true">
        <classpath refid="sample.books.compile.classpath"/>
    </javac>

    <jar jarfile="${sample.books.jar}"
         basedir="${sample.books.build.classes}">
      <manifest>
        <attribute name="Main-Class" value="${sample.books.main}"/>
      </manifest>
    </jar>
  </target>

  <!-- samples run -->
  <target name="sample.books.run"
          depends="sample.books.build"
          description="Runs the books sample">

    <java fork="true" classname="${sample.books.main}">
      <arg line="--username ${sample.credentials.username} --password ${sample.credentials.password}"/>
      <classpath>
        <path refid="sample.books.compile.classpath"/>
        <path location="${sample.books.jar}"/>
      </classpath>
    </java>

  </target>
</project>
